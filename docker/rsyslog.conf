#### MODULES ####
module(load="imudp")

module(
    load="impstats"
    interval="30" # how often to generate stats
    resetCounters="on" # to get deltas (e.g. # of messages submitted in the last 10 seconds)
    log.file="/var/lib/rsyslog/stats" # file to write those stats to
    log.syslog="off" # don't send stats through the normal processing pipeline. More on that in a bit
)

#### LISTENER ####
input(type="imudp" port="514" ruleset="sendRemote") # start an UDP listener 


#### DEFAULT RULE ####
# make gtls driver the default and set certificate files
global(
    workDirectory="/var/lib/rsyslog"
    DefaultNetstreamDriver="gtls"
    DefaultNetstreamDriverCAFile="/etc/ssl/rsyslog/ca-cert.pem"
    DefaultNetstreamDriverCertFile="/etc/ssl/rsyslog/server-cert.pem"
    DefaultNetstreamDriverKeyFile="/etc/ssl/rsyslog/server-key.pem"
)

# The default rule set is used by all inputs which do not have
# an explicit rule set bound.
# In our case, this means everything but the udp server.
# As such, regular log messages are written to local files.
# If required, the call statement to sendRemote can be used:
# local messages are both recorded in local files and forwarded to the listener.

#### TEMPLATE ####
# see https://serverfault.com/questions/767399/how-can-i-add-values-to-structured-data-with-rsyslog
# template string is a tweaked version of 'template_SyslogProtocol23Format'
template(name="metadata_syslog" type="string" string="<%PRI%>1 %timegenerated:::date-rfc3339% %HOSTNAME% %APP-NAME% %PROCID% %MSGID% [%STRUCTURED-DATA:R,ERE,1,FIELD:\\[([^]]*)\\]--end% timereported=%timereported%] %msg%\n")


#### FORWARDING RULE ####

ruleset(name="sendRemote" parser=["rsyslog.rfc3164"]) { # parser chain
    action(
        type="omfwd"
        template="metadata_syslog"
        target="host.docker.internal" port="10514"
        protocol="tcp"
        action.resumeRetryCount="-1" # infinite retries if host is down
        queue.type="disk" 
        queue.maxDiskSpace="1g" # 1gb space limit (use as much as possible)
        queue.fileName="safqueue" # unique name prefix for spool files (store and forward queue)
        StreamDriver="gtls"
        StreamDriverMode="1" # run driver in TLS-only mode
        StreamDriverAuthMode="x509/name"
    )
}